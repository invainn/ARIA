# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    build_and_test:
        docker:
        # specify the version you desire here
        - image: circleci/node:10.15.3
        
        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # - image: circleci/mongo:3.4.4

        working_directory: ~/repo

        steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            keys:
                - v1-dependencies-{{ checksum "client/package.json" }}
                - v1-dependencies-

        - restore_cache:
            keys:
                - v2-dependencies-{{ checksum "server/package.json" }}
                - v2-dependencies-

        - run:
            command: pwd && yarn install
            working_directory: client

        - run:
            command: pwd && yarn install
            working_directory: server

        - run: yarn install

        - save_cache:
            key: v1-dependencies-{{ checksum "client/package.json" }}
            paths:
                - client/node_modules

        - save_cache:
            key: v2-dependencies-{{ checksum "server/package.json" }}
            paths:
                - server/node_modules
            
        # run tests!
        - run: 
            name: Test aria-client
            command: |
                # yarn test
                yarn test:lint 
            working_directory: client

        - run: 
            name: Test aria-server
            command: yarn test
            working_directory: server
    # add these back in after tagged webhooks are supported
    # docker tag aria-client invainn/aria-client:${CIRCLE_SHA1}
    # docker tag aria-server invainn/aria-server:${CIRCLE_SHA1}
    staging:
        docker:
            - image: docker:stable
        steps:
            - checkout
            - run:
                name: Directory
                command: pwd
            - setup_remote_docker
            - run:
                name: Build and push aria-client image 
                command: |
                    docker build -f Dockerfile-prod -t invainn/aria-client:latest .
                    echo "$DOCKERHUB_PASS" | docker login -u $DOCKERHUB_USER --password-stdin
                    docker push invainn/aria-client:latest
                working_directory: client
            - run:
                name: Build and push aria-server image 
                command: |
                    docker build -t invainn/aria-server:latest .
                    echo "$DOCKERHUB_PASS" | docker login -u $DOCKERHUB_USER --password-stdin
                    docker push invainn/aria-server:latest
                working_directory: server 
            - run:
                name: Deploy to portainer
                command: |
                    curl -X POST ${PORTAINER_HOOK_CLIENT}
                    curl -X POST ${PORTAINER_HOOK_SERVER}
workflows:
    version: 2
    build_test_deploy:
        jobs:
            - build_and_test
            - staging:
                requires:
                    - build_and_test
                filters:
                    branches:
                        only: master
